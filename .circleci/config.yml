version: 2.1
orbs:
  queue: eddiewebb/queue@1.6.2

_defaults: &defaults
  working_directory: ~/repo
_docker_defaults: &docker_defaults
  image: cimg/node:16.14
_steps:
  queue_until_front_of_line: &queue_until_front_of_line
    # Ensures we don't deploy concurrently
    # See https://github.com/eddiewebb/circleci-queue
    queue/until_front_of_line:
      time: "60"
  restore_npm_cache: &restore_npm_cache
    restore_cache:
      keys:
        - npm-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
        - npm-v1-{{ .Branch }}-
        - npm-v1-
  save_npm_cache: &save_npm_cache
    save_cache:
      paths:
        - .npm-cache
      key: npm-v1-{{ .Branch }}-{{ checksum "package-lock.json" }}
  install_pip: &install_pip
    run: sudo apt-get update && sudo apt-get install python3-pip
  install_aws_cli: &install_aws_cli
    run: sudo pip install awscli
  install_dependencies: &install_dependencies
    run: npm ci --cache .npm-cache && sudo npm config set @microbit-foundation:registry https://npm.pkg.github.com/microbit-foundation && sudo npm i -g @microbit-foundation/website-deploy-aws@0.3.0 @microbit-foundation/website-deploy-aws-config@0.4.2 @microbit-foundation/circleci-npm-package-versioner@1
  install_theme: &install_theme
    run: npm config set @microbit-foundation:registry https://npm.pkg.github.com/microbit-foundation && npm install --no-save @microbit-foundation/python-editor-next-microbit@0.1.0-dev.126
  update_version: &update_version
    run: npm run ci:update-version
  build: &build
    run:
      name: Build
      command: npm run ci
  # https://circleci.com/orbs/registry/orb/threetreeslight/puppeteer
  chrome-deps: &chrome-deps
    run:
      name: Install Headless Chrome dependencies
      command: |
        sudo apt-get install -yq \
        ca-certificates fonts-liberation libappindicator3-1 libasound2 libatk-bridge2.0-0 libatk1.0-0 libc6 \
        libcairo2 libcups2 libdbus-1-3 libexpat1 libfontconfig1 libgbm1 libgcc1 libglib2.0-0 libgtk-3-0 libnspr4 \
        libnss3 libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 \
        libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 lsb-release wget xdg-utils
  serve-review: &serve-review
    run:
      name: Serve files for e2e tests (review)
      command: mkdir /tmp/app && cp -r build /tmp/app${PUBLIC_URL} && npx serve --no-clipboard -l 3000 /tmp/app
      background: true
  serve: &serve
    run:
      name: Serve files for e2e tests
      command: npm run serve
      background: true
  serve-wait: &serve-wait
    run:
      name: Wait for e2e server
      command: "curl --insecure -4 --retry 7 --retry-connrefused http://localhost:3000 1>/dev/null"
  e2e: &e2e
    run:
      name: e2e tests
      command: npm run test:e2e:headless
  store_reports: &store_reports
    store_artifacts:
      path: reports/
      destination: reports
  deploy: &deploy
    run:
      name: Deploy
      environment:
        NODE_PATH: /usr/local/lib/node_modules
      command: npm run deploy
  invalidate: &invalidate
    run:
      name: Invalidate CloudFront distribution
      command: "npm run invalidate"
  configure_registry_auth: &configure_registry_auth
    run:
      name: Configure registry auth
      # One for each user as we do global and local installs.
      command: echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" >> ~/repo/.npmrc && sudo echo "//npm.pkg.github.com/:_authToken=$GITHUB_TOKEN" | sudo tee -a /root/.npmrc > /dev/null

jobs:
  review:
    <<: *defaults
    docker:
      - <<: *docker_defaults
        environment:
          STAGE: REVIEW
          REACT_APP_STAGE: REVIEW
    steps:
      - checkout
      - *restore_npm_cache
      - *configure_registry_auth
      - *install_pip
      - *install_aws_cli
      - *install_dependencies
      - *install_theme
      - *update_version
      - *save_npm_cache
      # Set PUBLIC_URL based on the bucket prefix. PUBLIC_URL is equivalent to CRA's package.json homepage setting https://create-react-app.dev/docs/advanced-configuration/
      - run:
          name: "Set PUBLIC_URL for review branch"
          environment:
            NODE_PATH: /usr/local/lib/node_modules
          # Two env vars as PUBLIC_URL seems to be blank when running jest even if we set it.
          command: URL=$(npm run --silent public-url); echo "export PUBLIC_URL=$URL && export E2E_PUBLIC_URL=$URL" >> $BASH_ENV
      - *build
      # Unlike other stages deploy, first so we still get deployments when e2e fails.
      - *queue_until_front_of_line
      - *deploy
      - *invalidate
      - *chrome-deps
      - *serve-review
      - *serve-wait
      - *e2e
      - *store_reports

  staging:
    <<: *defaults
    docker:
      - <<: *docker_defaults
        environment:
          STAGE: STAGING
          REACT_APP_STAGE: STAGING
    steps:
      - checkout
      - *restore_npm_cache
      - *configure_registry_auth
      - *install_pip
      - *install_aws_cli
      - *install_dependencies
      - *install_theme
      - *update_version
      - *save_npm_cache
      - *build
      - *queue_until_front_of_line
      - *chrome-deps
      - *serve
      - *serve-wait
      - *e2e
      - *store_reports
      - *deploy
      - *invalidate

  production:
    <<: *defaults
    docker:
      - <<: *docker_defaults
        environment:
          STAGE: PRODUCTION
          REACT_APP_STAGE: PRODUCTION
    steps:
      - checkout
      - *restore_npm_cache
      - *configure_registry_auth
      - *install_pip
      - *install_aws_cli
      - *install_dependencies
      - *install_theme
      - *update_version
      - *save_npm_cache
      - *build
      # This doesn't work for tags. Don't release more than one at once!
      # - *queue_until_front_of_line
      - *deploy
      - *invalidate

workflows:
  version: 2
  review:
    jobs:
      - review:
          filters:
            branches:
              ignore: main
  staging:
    jobs:
      - staging:
          filters:
            branches:
              only: main
  production:
    jobs:
      - production:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
